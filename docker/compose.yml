services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-kafka:7.3.0
        container_name: kafka
        ports:
            # To learn about configuring Kafka for access across networks see
            # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
            - '9092:9092'
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    redis:
        container_name: redis
        image: redis
        volumes:
            - redis-data:/data
        command:
            - redis-server
            - --save 60 1
            - --loglevel warning

    postgres:
        container_name: postgres
        image: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_HOST_AUTH_METHOD: trust
        volumes:
            - postgres-data:/var/lib/postgresql/data

    collector:
        container_name: collector
        image: otel/opentelemetry-collector
        ports:
            - 4317:4317
        command:
            - '--config=/etc/otel-collector-config.yaml'
        volumes:
            - ./otel-collector.yaml:/etc/otel-collector-config.yaml

    backend:
        container_name: backend
        image: highlight.io/backend
        ports:
            - 4318:4318
            - 8082:8082
        build:
            context: ..
            dockerfile: docker/backend.Dockerfile
        environment:
            - DEMO_SESSION
            - DEPLOYMENT_KEY
            - ENVIRONMENT
            - FIREBASE_SECRET
            - FRONTEND_URI
            - INFLUXDB_BUCKET
            - INFLUXDB_ORG
            - KAFKA_ENV_PREFIX=docker
            - KAFKA_SERVERS=kafka:9092
            - KAFKA_TOPIC=dev
            - PSQL_DB=postgres
            - PSQL_HOST=postgres
            - PSQL_PASSWORD=
            - PSQL_PORT=5432
            - PSQL_USER=postgres
            - PUBLIC_GRAPH_URI
            - REDIS_ADDRESS=redis:6379
            - REDIS_EVENTS_STAGING_ENDPOINT=redis:6379
            - SESSION_FILE_PATH_PREFIX

    frontend:
        container_name: frontend
        image: highlight.io/frontend
        ports:
            - 3000:443
        build:
            context: ..
            dockerfile: docker/frontend.Dockerfile
            args:
                - REACT_APP_DEMO_SESSION
                - REACT_APP_ENVIRONMENT
                - REACT_APP_FIREBASE_CONFIG_OBJECT
                - REACT_APP_FRONTEND_ORG
                - REACT_APP_FRONTEND_URI
                - REACT_APP_ONPREM
                - REACT_APP_PRIVATE_GRAPH_URI
                - REACT_APP_PUBLIC_GRAPH_URI
        environment:
            - RENDER_PREVIEW=true

volumes:
    postgres-data:
    redis-data:
