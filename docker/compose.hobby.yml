x-depends-infra: &depends-infra
    depends_on:
        kafka:
            condition: service_started
        redis:
            condition: service_started
        postgres:
            condition: service_healthy
        clickhouse:
            condition: service_started
        collector:
            condition: service_started

x-backend-env: &backend-env
    environment:
        - CLICKHOUSE_ADDRESS
        - CLICKHOUSE_DATABASE
        - CLICKHOUSE_PASSWORD
        - CLICKHOUSE_USERNAME
        - DEMO_PROJECT_ID
        - DOPPLER_CONFIG
        - ENABLE_OBJECT_STORAGE=true
        - ENVIRONMENT
        - FIREBASE_SECRET
        - FRONTEND_URI
        - IN_DOCKER=true
        - IN_DOCKER_GO=true
        - KAFKA_SERVERS
        - KAFKA_TOPIC
        - OBJECT_STORAGE_FS=/highlight-data
        - ON_PREM=true
        - OTLP_ENDPOINT
        - PSQL_DB
        - PSQL_HOST
        - PSQL_PASSWORD
        - PSQL_PORT
        - PSQL_USER
        - REACT_APP_AUTH_MODE=simple
        - REACT_APP_COMMIT_SHA
        - REACT_APP_FRONTEND_URI
        - REACT_APP_PRIVATE_GRAPH_URI
        - PRIVATE_GRAPH_URI
        - PUBLIC_GRAPH_URI
        - REDIS_ADDRESS
        - REDIS_EVENTS_STAGING_ENDPOINT
        - SESSION_FILE_PATH_PREFIX
        - TZ
        - ADMIN_PASSWORD

services:
    kafka:
        extends:
            file: compose.yml
            service: kafka
        environment:
            # needs to share docker-internal address
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

    collector:
        extends:
            file: compose.yml
            service: collector
        volumes:
            - ./otel-collector.hobby.yaml:/etc/otel-collector-config.yaml

    backend:
        container_name: backend
        image: ghcr.io/highlight/highlight-backend:latest
        healthcheck:
            test: ['CMD', 'curl', '-f', '-k', 'https://localhost:8082/health']
            start_period: 60s
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
            - 8082:8082
        volumes:
            - highlight-data:/highlight-data
        <<: *backend-env

    frontend:
        container_name: frontend
        image: ghcr.io/highlight/highlight-frontend:latest
        healthcheck:
            test: ['CMD', 'curl', '-f', '-k', 'https://localhost:3000/']
            start_period: 5s
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
            - 3000:3000
            - 6006:6006
            - 8080:8080
        environment:
            - REACT_APP_PRIVATE_GRAPH_URI
            - REACT_APP_PUBLIC_GRAPH_URI
            - REACT_APP_FRONTEND_URI

volumes:
    highlight-data:
