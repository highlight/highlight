mutation PushPayload(
    $session_id: ID!
    $events: ReplayEventsInput!
    $messages: String!
    $resources: String!
    $errors: [ErrorObjectInput]!
) {
    pushPayload(
        session_id: $session_id
        events: $events
        messages: $messages
        resources: $resources
        errors: $errors
    )
}

mutation identifySession(
    $session_id: ID!
    $user_identifier: String!
    $user_object: Any
) {
    identifySession(
        session_id: $session_id
        user_identifier: $user_identifier
        user_object: $user_object
    )
}

mutation addSessionProperties($session_id: ID!, $properties_object: Any) {
    addSessionProperties(
        session_id: $session_id
        properties_object: $properties_object
    )
}

mutation addTrackProperties($session_id: ID!, $properties_object: Any) {
    addTrackProperties(
        session_id: $session_id
        properties_object: $properties_object
    )
}

mutation initializeSession(
    $organization_verbose_id: String!
    $enable_strict_privacy: Boolean!
    $clientVersion: String!
    $firstloadVersion: String!
    $clientConfig: String!
    $environment: String!
) {
    initializeSession(
        organization_verbose_id: $organization_verbose_id
        enable_strict_privacy: $enable_strict_privacy
        clientVersion: $clientVersion
        firstloadVersion: $firstloadVersion
        clientConfig: $clientConfig
        environment: $environment
    ) {
        id
        user_id
        organization_id
    }
}

# The gql codegen library requires a query in the schema, so this is just a placeholder.
# Tangentially related:
# https://github.com/dotansimha/graphql-code-generator/issues/3268
query Ignore($id: ID!) {
    ignore(id: $id)
}
