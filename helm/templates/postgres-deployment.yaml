apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "highlight.fullname" . }}-postgres
  labels:
    app.kubernetes.io/component: postgres
    app.kubernetes.io/part-of: {{ include "highlight.name" . }}
    {{- include "highlight.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: postgres
      app.kubernetes.io/part-of: {{ include "highlight.name" . }}
      {{- include "highlight.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: postgres
        app.kubernetes.io/part-of: {{ include "highlight.name" . }}
        {{- include "highlight.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-init
              mountPath: /root/init.sql
              subPath: init.sql
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: {{ .Values.postgres.config.authMethod | quote }}
          ports:
            - containerPort: {{ .Values.postgres.config.port | int }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 5
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "highlight.fullname" . }}-postgres-pvc
        - name: postgres-init
          configMap:
            name: {{ include "highlight.fullname" . }}-postgres-init