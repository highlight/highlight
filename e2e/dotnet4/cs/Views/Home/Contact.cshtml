@using System.Diagnostics.Metrics
@using OpenTelemetry
@using OpenTelemetry.Trace
@using Microsoft.Extensions.Logging

@{
    var loggerFactory = LoggerFactory.Create(builder => {
        builder.SetMinimumLevel(LogLevel.Debug);
        Highlight.OpenTelemetry.InstrumentLogging(builder,
        config => {
            config.ProjectId = "1";
            config.ServiceName = "example-dotnet-backend";
        });
    });
    var logger = loggerFactory.CreateLogger("example-dotnet-backend");

    var tracerProvider = Sdk.CreateTracerProviderBuilder()
        .AddSource("example-dotnet-backend")
        .Build();
    var tracer = tracerProvider.GetTracer("example-dotnet-backend");

    var meter = new Meter("example-dotnet-backend");
    var randomCounter = meter.CreateCounter<long>("random.number.generated");

    int randomNumber;

    // Use StartActivity to create a new trace span.
    var ctx = new SpanContext();
    using (var activity = tracer.StartActiveSpan("RenderRandomNumber", SpanKind.Client, ref ctx, new SpanAttributes(), null, DateTimeOffset.Now))
    {
        // Generate a random number between 1 and 99.
        Random rnd = new Random();
        randomNumber = rnd.Next(1, 100);

        activity.SetAttribute("random.number", randomNumber);
        activity.AddEvent("Random number generated");

        // Log the generated random number.
        logger.LogInformation("Random number {randomNumber} generated.", randomNumber);

        // Record a metric for the generation event.
        randomCounter.Add(1);
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <title>Random Number with OpenTelemetry and Logging</title>
</head>
<body>
<h1>Random Number Example</h1>
<p>Your random number is: <strong>@randomNumber</strong></p>
</body>
</html>