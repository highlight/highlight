name: 'Java SDK'

on:
    workflow_dispatch:
        inputs:
            action:
                description: 'Action'
                required: true
                default: 'none'
                type: choice
                options:
                    - none
                    - build
                    - test
                    - deploy
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize]
        paths:
            - 'sdk/highlight-java/**'
            - '.github/workflows/java-sdk.yml'
    merge_group:

permissions:
    checks: write

defaults:
    run:
        working-directory: ./sdk/highlight-java

jobs:
    setup:
        name: Setup
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set BUILD_VERSION
              id: version
              run: echo "version=$(git describe --match "sdk/highlight-java/v*" --abbrev=0 --tags $(git rev-list --tags --max-count=1) | cut -d "v" -f2)-b$GITHUB_RUN_NUMBER" >> "$GITHUB_OUTPUT"

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: setup
        if: ${{ (inputs.action == '' || inputs.action == 'none') || (inputs.action == 'build' || inputs.action == 'deploy') }}
        defaults:
            run:
                working-directory: ./sdk/highlight-java
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17

            - name: Build
              run: |
                  mvn clean package --batch-mode -DskipTests -Drevision=${{needs.setup.outputs.version}}
                  mv ./highlight-sdk/target/highlight-sdk-*.jar ./

            - name: Publish build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: highlight-java-sdk
                  path: ./sdk/highlight-java/highlight-sdk-*.jar

    test:
        name: Test
        runs-on: ubuntu-latest
        needs: setup
        if: ${{ (inputs.action == '' || inputs.action == 'none') || (inputs.action == 'test' || inputs.action == 'deploy') }}
        defaults:
            run:
                working-directory: ./sdk/highlight-java
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17

            - name: Test
              run: mvn clean test --batch-mode -Dmaven.test.failure.ignore=true -Drevision=${{needs.setup.outputs.version}}

            - name: Upload Test Report
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: junit-test-results
                  path: '**/target/surefire-reports/TEST-*.xml'
                  retention-days: 1

            - name: Publish Test Report
              uses: mikepenz/action-junit-report@v3
              with:
                  commit: ${{github.event.workflow_run.head_sha}}
                  report_paths: '**/target/surefire-reports/TEST-*.xml'

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: [setup, build, test]
        if: ${{ ((inputs.action == '' || inputs.action == 'none') && github.ref == 'refs/heads/main') || inputs.action == 'deploy' }}
        defaults:
            run:
                working-directory: ./sdk/highlight-java
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17
                  server-id: ossrh
                  server-username: MAVEN_USERNAME
                  server-password: MAVEN_PASSWORD
                  gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
                  gpg-passphrase: MAVEN_GPG_PASSPHRASE

            - name: Publish to the Maven Central Repository
              run: mvn clean deploy --batch-mode --no-transfer-progress -Drevision=${{needs.setup.outputs.version}}
              env:
                  MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                  MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
                  MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
