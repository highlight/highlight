name: Monorepo

on:
    push:
        branches: ['master']
    pull_request:
        types: [opened, synchronize]

jobs:
    build:
        name: Build Yarn Turborepo
        timeout-minutes: 30
        runs-on: ubuntu-latest
        # configures turborepo Remote Caching
        env:
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

        steps:
            - name: Use HTTPS for checkout
              run: echo -e '[url "https://github.com/"]\n  insteadOf = "git@github.com:"' >> ~/.gitconfig

            - name: Checkout
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GH_REPO_TOKEN }}
                  submodules: true

            - name: Set submodule change data
              run: |
                  git fetch origin master
                  changed="$(git diff origin/master --name-only | grep '^highlight-javascript$')"
                  echo "highlight_javascript_changed=$changed" >> $GITHUB_ENV

            # automatically caches dependencies based on yarn.lock
            - name: Setup Node.js environment
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  cache: 'yarn'

            - name: Install js dependencies
              run: yarn

            - name: Check formatting
              run: yarn format-check

            - name: Build & test
              run: yarn test:all

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-2

            - name: Validate project is ready to be published
              if: ${{ env.highlight_javascript_changed == 'highlight-javascript' }}
              run: yarn prepublish

            # always publish client, even in PRs
            # this is ok because the final push to master of the version will replace
            # any previous builds, while doing this in PR will allow the PR frontend preview
            # to reference the PR's latest version of client
            - name: Publish client bundle
              if: ${{ env.highlight_javascript_changed == 'highlight-javascript' }}
              run: yarn publish:client

            - name: Upload frontend sourcemaps
              if: github.ref == 'refs/heads/master'
              run: yarn && yarn sourcemaps:frontend
              env:
                  HIGHLIGHT_API_KEY: ${{ secrets.HIGHLIGHT_SOURCEMAP_API_KEY }}

            - name: Configure yarn npm registry credentials
              if: github.ref == 'refs/heads/master'
              run: |
                  yarn config set npmRegistryServer "https://registry.npmjs.org"
                  yarn config set npmAuthToken "${NPM_TOKEN}"
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish npm packages
              if: github.ref == 'refs/heads/master'
              run: yarn publish:turbo
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
