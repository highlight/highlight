name: End-to-end

on:
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize]
    merge_group:

jobs:
    e2e-frontend-backend-client:
        name: E2E Client / Frontend / Backend
        timeout-minutes: 30
        runs-on: buildjet-4vcpu-ubuntu-2204

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: true

            - name: Setup Node.js environment
              uses: buildjet/setup-node@v3
              with:
                  node-version: 18
                  cache: 'yarn'

            - name: Setup Golang environment
              uses: buildjet/setup-go@v4
              with:
                  go-version-file: 'backend/go.mod'
                  cache-dependency-path: '**/go.sum'

            - name: Login to Docker Hub
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight' || github.ref == 'refs/heads/main'
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Start docker containers & run cypress
              run: |
                  start_time=$(date -Isecond)

                  # start highlight
                  pushd docker;
                  ./start-infra.sh > /tmp/highlight.log 2>&1;
                  docker compose exec -e PSQL_HOST -e PSQL_USER -e PSQL_DB postgres bash -c 'psql -h $PSQL_HOST -U $PSQL_USER $PSQL_DB < /root/init.sql' >> /tmp/highlight.log 2>&1;
                  ./run-frontend.sh  >> /tmp/highlight.log 2>&1 & ./run-backend.sh >> /tmp/highlight.log 2>&1 &
                  popd;

                  # run opentelemetry file watcher
                  pushd e2e/opentelemetry/filelog;
                  EXAMPLE_LOG_FILE_PATH=/tmp/highlight.log docker compose run -d collector;
                  popd;

                  # wait for highlight to be ready
                  yarn dlx wait-on -l -s 4 https://127.0.0.1:3000/index.html  https://127.0.0.1:3000/src/routers/AppRouter/AppRouter.tsx http://127.0.0.1:8080/dist/index.js https://127.0.0.1:8082/health;

                  # run cypress tests
                  yarn cy:run;

                  # look for containers that crashed
                  num_crashed=$(docker ps -a -f status=exited | grep -E '\(' | grep -cvE '\(\d+\)' || true)
                  if [ "$num_crashed" -gt 0 ]; then
                    echo "$num_crashed containers crashed"
                    docker ps -a -f status=exited
                    exit 1
                  fi

            - name: Dump setup logs on failure
              if: failure()
              run: cat /tmp/highlight.log

            - name: Dump docker container logs on failure
              if: failure()
              run: |
                  cd docker;
                  docker compose logs;

            - name: Save videos
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: cypress-videos
                  path: cypress/videos
