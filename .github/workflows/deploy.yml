name: Deploy to AWS
on:
    push:
        branches:
            - 'main'
            - 'zane/dockerfile_v2'
        paths:
            - 'go.work'
            - 'go.work.sum'
            - 'backend/**'
            - 'deploy/**'
            - 'docker/backend.Dockerfile'
            - '.github/workflows/deploy.yml'

concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
    deploy_backend:
        runs-on: buildjet-2vcpu-ubuntu-2204-arm
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-2

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build, tag, and push arm64 image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: highlight-production-ecr-repo
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  docker buildx build --build-arg REACT_APP_COMMIT_SHA=${{ github.sha }} --platform linux/arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG.arm64 -f docker/backend.Dockerfile .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG.arm64

            # Edit and deploy metric monitors
            # deploying only to metric monitors to make this less disruptive
            - name: Replace image label for metric monitors task
              id: image-metric-monitor
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                  task-definition: deploy/metric-monitor-task.json
                  container-name: highlight-backend
                  image: ${{ steps.login-ecr.outputs.registry }}/highlight-production-ecr-repo:${{ github.sha }}.arm64
            - name: Deploy to Amazon ECS metric monitor service
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: ${{ steps.image-metric-monitor.outputs.task-definition }}
                  service: metric-monitor
                  cluster: highlight-production-cluster
