name: E2E Test
on:
    pull_request:
        types: ['opened', 'synchronize']
        branches:
            - '**'
            - '!master'
jobs:
    test:
        name: End-to-end Cypress Testing
        runs-on: ubuntu-latest
        timeout-minutes: 30
        env:
            ENVIRONMENT: test
            PGPASSWORD: postgres
            PSQL_HOST: localhost
            PSQL_PORT: 5432
            PSQL_USER: postgres
            PSQL_DB: postgres
            PSQL_PASSWORD: postgres
            REDIS_HOST: redis
            REDIS_PORT: 6379
            # configures turborepo remote caching
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: postgres
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6379:6379
        steps:
            - name: Use HTTPS for checkout
              run: echo -e '[url "https://github.com/"]\n  insteadOf = "git@github.com:"' >> ~/.gitconfig
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GH_REPO_TOKEN }}
                  submodules: true
            - name: Set submodule change data
              run: |
                  git fetch origin master
                  changed="$(git diff origin/master --name-only | grep '^highlight-javascript$')"
                  echo "highlight_javascript_changed=$changed" >> $GITHUB_ENV
            # Check paths here instead of using `paths` at the top level because
            # we need to wait until checkout to see if submodules have changed.
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      core:
                        - '**/package.json'
                        - '**/yarn.lock'
                        - '.github/workflows/e2e-test.yml'
                        - '.gitmodules'
                        - 'cypress.config.js'
                        - 'cypress/**'
                        - 'frontend/**'
                        - 'rrweb/**'
            - name: Combine outputs
              run: |
                  run_ci="${{ env.highlight_javascript_changed == 'highlight-javascript' || steps.filter.outputs.core == 'true' }}"
                  echo "env.highlight_javascript_changed: ${{ env.highlight_javascript_changed }}"
                  echo "steps.filter.outputs.core: ${{ steps.filter.outputs.core }}"
                  echo "Should CI run? $run_ci"
                  echo "run_ci=$run_ci" >> $GITHUB_ENV
            - name: Setup Node.js
              uses: actions/setup-node@v3
              if: ${{ env.run_ci == 'true' }}
              with:
                  node-version: 16
                  cache: 'yarn'
            - name: Install js dependencies
              if: ${{ env.run_ci == 'true' }}
              run: yarn
            - name: Setup Go
              uses: actions/setup-go@v3
              if: ${{ env.run_ci == 'true' }}
              with:
                  go-version-file: 'backend/go.mod'
                  cache: true
                  cache-dependency-path: backend/go.sum
            - name: Install Doppler CLI
              uses: dopplerhq/cli-action@v1
              if: ${{ env.run_ci == 'true' }}
            - name: Migrate and seed database
              if: ${{ env.run_ci == 'true' }}
              run: |
                  cd backend/
                  make migrate
                  psql -h $PSQL_HOST -U $PSQL_USER $PSQL_DB < ../scripts/migrations/init.sql
              env:
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_E2E_TOKEN }}
            - name: Build frontend + backend
              if: ${{ env.run_ci == 'true' }}
              run: yarn ci:build
            - name: Run Cypress tests
              uses: cypress-io/github-action@v4
              if: ${{ env.run_ci == 'true' }}
              with:
                  install: false
                  # frontend dependencies of ci:frontend are built prior by ci:build
                  start: yarn ci:frontend, yarn ci:backend
                  wait-on: 'https://localhost:3000, http://localhost:8080/dist/index.js, https://localhost:8082/health'
              env:
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_E2E_TOKEN }}
                  NODE_EXTRA_CA_CERTS: ./backend/localhostssl/server.crt
#            Cypress video creation is very slow
#            - name: Save videos
#              uses: actions/upload-artifact@v2
#              if: failure()
#              with:
#                  name: cypress-videos
#                  path: cypress/videos
