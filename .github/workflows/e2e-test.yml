name: E2E Test
on:
    push:
        branches:
            - '**'
            - '!master'
        # paths:
        #     - 'frontend/**'
        #     - 'client/**'
        #     - 'firstload/**'
        #     - '.github/workflows/e2e-test.yml'
jobs:
    # TODO: Investigate creating custom dockerfile for testing. Could reuse main
    # Dockerfile and add cy:run command.
    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: postgres
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        env:
            PSQL_HOST: localhost
            PSQL_PORT: 5432
            PSQL_USER: postgres
            PSQL_DB: postgres
            PSQL_PASSWORD: postgres
            REDIS_HOST: redis
            REDIS_PORT: 6379
            ENVIRONMENT: test
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 16.14.2
                  registry-url: https://registry.npmjs.org
            - name: Setup Go
              uses: actions/setup-go@v3
              with:
                  go-version-file: 'backend/go.mod'
                  cache: true
                  cache-dependency-path: backend/go.mod
              run: cd backend && go get
            - name: Install Doppler CLI
              uses: dopplerhq/cli-action@v1
            - name: Install frontend dependencies
              # Custom install command here instead of frontend:install because
              # of this issue: https://github.com/yarnpkg/yarn/issues/6312
              run: yarn && cd frontend && yarn && cd ../client && yarn
            - name: Install Air
              run: go install github.com/cosmtrek/air@latest
            - name: Cypress install and run
              uses: cypress-io/github-action@v4
              with:
                  start: yarn ci:start
                  wait-on: https://localhost:8082/public
              env:
                  DOPPLER_TOKEN: ${{ secrets.DOPPLER_E2E_TOKEN }}
                  NODE_EXTRA_CA_CERTS: ./backend/localhostssl/server.crt
            - name: Save videos
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: cypress-videos
                  path: cypress/videos
