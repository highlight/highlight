name: Backend
on:
    push:
        branches:
            - '**'
            - '!master'
        paths:
            - 'backend/**'
            - '.github/workflows/backend.yml'
            - '!backend/migrations'
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Go
              uses: actions/setup-go@v2
            - name: Format
              uses: Jerome1337/gofmt-action@v1.0.4
              with:
                  gofmt-path: './backend'
                  gofmt-flags: '-l -d'
            - name: Run linter
              uses: golangci/golangci-lint-action@v2
              with:
                  args: --config ./.golangci.yml
                  working-directory: backend
                  version: latest
            - name: Build binary
              run: cd backend && go build .
    test:
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: postgres
              POSTGRES_USER: postgres
              POSTGRES_DB: postgres
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
            ports:
              - 5432:5432
        env:
          PSQL_HOST: "localhost"
          PSQL_PORT: "5432"
          PSQL_USER: "postgres"
          PSQL_DB: "postgres"
          PSQL_PASSWORD: "postgres"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Go
              uses: actions/setup-go@v2
            - name: Run tests
              run: cd backend && go test ./... -v
