name: Backend
on:
    push:
        branches:
            - '**'
            - '!master'
        paths:
            - 'backend/**'
            - '.github/workflows/backend.yml'
            - '!backend/migrations'
jobs:
    changes:
        runs-on: ubuntu-latest
        # Set job outputs to values from filter step
        outputs:
            private-graph: ${{ steps.filter.outputs.private-graph }}
            public-graph: ${{ steps.filter.outputs.public-graph }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      private-graph:
                        - 'backend/private-graph/graph/schema.graphqls'
                      public-graph:
                        - 'backend/public-graph/graph/schema.graphqls'
    code-setup:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup Go
              uses: actions/setup-go@v2
    code-quality-check:
        needs: code-setup
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Format
              uses: Jerome1337/gofmt-action@v1.0.4
              with:
                  gofmt-path: './backend'
                  gofmt-flags: '-l -d'
            - name: Run linter
              uses: golangci/golangci-lint-action@v2
              with:
                  args: --config ./.golangci.yml
                  working-directory: backend
                  version: latest
    make-check:
        needs: [changes, code-setup]
        if: needs.changes.outputs.private-graph == 'true' || needs.changes.outputs.public-graph == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: copy backend
              run: |
                mkdir tmp
                cp -a backend/. tmp/
            - name: Make private graph
              if: ${{ needs.changes.outputs.private-graph == 'true' }}
              run: |
                cd backend/
                make private-gen 
            - name: Make public graph
              if: ${{ needs.changes.outputs.public-graph == 'true' }}
              run: |
                cd backend/
                make public-gen 
            - name: Diff Check
              run: |
                diff -r backend/ tmp/
    build:
        needs: code-quality-check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Build binary
              run: cd backend/ && go build .
    test:
        needs: code-quality-check
        runs-on: ubuntu-latest
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: postgres
              POSTGRES_USER: postgres
              POSTGRES_DB: postgres
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
            ports:
              - 5432:5432
        env:
          PSQL_HOST: "localhost"
          PSQL_PORT: "5432"
          PSQL_USER: "postgres"
          PSQL_DB: "postgres"
          PSQL_PASSWORD: "postgres"
          ENVIRONMENT: "test"
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Run tests
              run: cd backend && go test -p 1 ./... -v
