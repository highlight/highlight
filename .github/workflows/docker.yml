name: Publish Production Docker Images

on:
    workflow_dispatch:
    release:
        types: [published]
    schedule:
        - cron: '0 0 * * 5'

jobs:
    publish-docker:
        name: Publish Production Docker Image
        strategy:
            matrix:
                runs-on:
                    [buildjet-4vcpu-ubuntu-2204, buildjet-8vcpu-ubuntu-2204-arm]
                container: ['frontend', 'backend']
        runs-on: ${{matrix.runs-on}}
        timeout-minutes: 30
        env:
            IMAGE_NAME: highlight-${{ matrix.container }}
            IMAGE_TAG: ${{ github.sha }}
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: true

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push docker container.
              env:
                  GH_REGISTRY: ghcr.io
                  GH_DOCKER_TOKEN: ${{ secrets.GH_DOCKER_TOKEN }}
                  RUNS_ON: ${{ matrix.runs-on }}
              shell: bash
              run: |
                  REACT_APP_COMMIT_SHA=${{ github.sha }}
                  if [[ "$RUNS_ON" == *"buildjet-4vcpu-ubuntu-2204-arm"* ]]; then
                    PLATFORM=linux/arm64
                    GOARCH=arm64
                  else
                    PLATFORM=linux/amd64
                    GOARCH=amd64
                  fi

                  # log in to gh registry
                  echo $GH_DOCKER_TOKEN | docker login $GH_REGISTRY -u Vadman97 --password-stdin

                  # build docker image with common environment
                  pushd docker
                  source env.sh --go-docker
                  popd
                  docker buildx build $BUILD_ARGS \
                    --push \
                    --platform $PLATFORM \
                    -t $GH_REGISTRY/highlight/$IMAGE_NAME:$IMAGE_TAG \
                    -t $GH_REGISTRY/highlight/$IMAGE_NAME:latest \
                    -f docker/${{ matrix.container }}.Dockerfile \
                    --target ${{ matrix.container }}-prod .
