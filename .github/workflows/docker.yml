name: End-to-end

on:
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize]
    merge_group:

jobs:
    e2e-frontend-backend-client:
        name: E2E Client / Frontend / Backend
        timeout-minutes: 30
        runs-on: buildjet-4vcpu-ubuntu-2204

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: true

            - name: Setup Node.js environment
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'yarn'

            - name: Setup Golang environment
              uses: actions/setup-go@v4
              with:
                  go-version: '^1.19'
                  cache-dependency-path: '**/go.sum'

            - name: Login to Docker Hub
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight'
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to AWS ECR
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight'
              uses: docker/login-action@v2
              with:
                  registry: public.ecr.aws
                  username: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            - name: Start docker containers & run cypress
              run: |
                  pushd docker;
                  ./start-infra.sh > /tmp/highlight.log 2>&1;
                  docker compose exec -e PSQL_HOST -e PSQL_USER -e PSQL_DB postgres bash -c 'psql -h $PSQL_HOST -U $PSQL_USER $PSQL_DB < /root/init.sql' >> /tmp/highlight.log 2>&1;
                  ./run-frontend.sh  >> /tmp/highlight.log 2>&1 & ./run-backend.sh >> /tmp/highlight.log 2>&1 &
                  yarn dlx wait-on -l -s 4 https://127.0.0.1:3000/index.html  https://127.0.0.1:3000/src/routers/AppRouter/AppRouter.tsx http://127.0.0.1:8080/dist/index.js https://127.0.0.1:8082/health;                
                  popd;

                  yarn cy:run;

            - name: Dump setup logs on failure
              if: failure()
              run: cat /tmp/highlight.log

            - name: Dump docker container logs on failure
              if: failure()
              run: |
                  cd docker;
                  docker compose logs;

            - name: Save videos
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: cypress-videos
                  path: cypress/videos

    publish-docker:
        name: Publish Production Docker Image
        #      if: github.ref == 'refs/heads/main' && github.repository == 'highlight/highlight'
        #        needs: e2e-frontend-backend-client
        runs-on: buildjet-2vcpu-ubuntu-2204
        strategy:
            matrix:
                container: ['frontend', 'backend']
        timeout-minutes: 30
        env:
            IMAGE_NAME: highlight-${{ matrix.container }}
            IMAGE_TAG: ${{ github.sha }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: true

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to AWS ECR
              uses: docker/login-action@v2
              with:
                  registry: public.ecr.aws
                  username: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            - name: Build and push docker container.
              env:
                  ECR_REGISTRY: public.ecr.aws
                  GHR_REGISTRY: ${{ env.REGISTRY }}
                  GH_DOCKER_TOKEN: ${{ secrets.GH_DOCKER_TOKEN }}
              run: |
                  # log in to gh registry
                  echo $GH_DOCKER_TOKEN | docker login ghcr.io -u Vadman97 --password-stdin

                  # build docker image with common environment
                  pushd docker
                  source env.sh
                  popd
                  docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/highlight-io/$IMAGE_NAME:$IMAGE_TAG -f docker/${{ matrix.container }}.Dockerfile --target ${{ matrix.container }}-prod .

                  # push to aws ecr
                  docker push $ECR_REGISTRY/highlight-io/$IMAGE_NAME:$IMAGE_TAG

                  # push to github package registry
                  docker tag $ECR_REGISTRY/highlight-io/$IMAGE_NAME:$IMAGE_TAG $GHR_REGISTRY/highlight/$IMAGE_NAME:$IMAGE_TAG
                  docker push $GHR_REGISTRY/highlight/$IMAGE_NAME:$IMAGE_TAG
