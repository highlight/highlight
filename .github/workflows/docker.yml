name: Publish Production Docker Images

on:
    workflow_dispatch:
    pull_request:
        types: [opened, synchronize]
    release:
        types: [published]

concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
    publish-docker:
        name: Publish Production Docker Image
        strategy:
            matrix:
                container: ['frontend', 'backend']
        runs-on: buildjet-4vcpu-ubuntu-2204
        timeout-minutes: 30
        env:
            IMAGE_NAME: highlight-${{ matrix.container }}
            TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
            TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Login to Docker Hub
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight' || github.ref == 'refs/heads/main'
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Login to GitHub Docker
              if: github.event.pull_request.head.repo.full_name == 'highlight/highlight' || github.ref == 'refs/heads/main'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: Vadman97
                  password: ${{ secrets.GH_DOCKER_TOKEN }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push docker container.
              shell: bash
              working-directory: ./docker
              env:
                  REACT_APP_COMMIT_SHA: ${{ github.sha }}
                  TARGET: ${{ matrix.container }}
                  RELEASE: ${{ github.ref }}
              run: |
                  IMAGE_TAG=$(echo ${{ github.ref_name }} | sed 's/\//-/g')

                  PUSH="--push -t ghcr.io/highlight/$IMAGE_NAME:$IMAGE_TAG"
                  if [[ ${{ github.event_name }} == 'release' ]]; then
                    PUSH="${PUSH} -t ghcr.io/highlight/$IMAGE_NAME:latest"
                  fi

                  export PUSH
                  export PLATFORM="--platform linux/arm64,linux/amd64"

                  # build docker image with common environment
                  ./build.sh
