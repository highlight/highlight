mutation MarkSessionAsViewed($secure_id: String!, $viewed: Boolean!) {
    markSessionAsViewed(secure_id: $secure_id, viewed: $viewed) {
        secure_id
        viewed
    }
}

mutation MarkSessionAsStarred($secure_id: String!, $starred: Boolean!) {
    markSessionAsStarred(secure_id: $secure_id, starred: $starred) {
        secure_id
        starred
    }
}

mutation CreateOrUpdateStripeSubscription(
    $workspace_id: ID!
    $plan_type: PlanType!
    $interval: SubscriptionInterval!
) {
    createOrUpdateStripeSubscription(
        workspace_id: $workspace_id
        plan_type: $plan_type
        interval: $interval
    )
}

mutation UpdateBillingDetails($workspace_id: ID!) {
    updateBillingDetails(workspace_id: $workspace_id)
}

mutation updateErrorGroupState($secure_id: String!, $state: String!) {
    updateErrorGroupState(secure_id: $secure_id, state: $state) {
        secure_id
        state
    }
}

mutation SendEmailSignup($email: String!) {
    emailSignup(email: $email)
}

mutation AddAdminToWorkspace($workspace_id: ID!, $invite_id: String!) {
    addAdminToWorkspace(workspace_id: $workspace_id, invite_id: $invite_id)
}

mutation JoinWorkspace($workspace_id: ID!) {
    joinWorkspace(workspace_id: $workspace_id)
}

mutation ChangeAdminRole(
    $workspace_id: ID!
    $admin_id: ID!
    $new_role: String!
) {
    changeAdminRole(
        workspace_id: $workspace_id
        admin_id: $admin_id
        new_role: $new_role
    )
}

mutation DeleteAdminFromProject($project_id: ID!, $admin_id: ID!) {
    deleteAdminFromProject(project_id: $project_id, admin_id: $admin_id)
}

mutation DeleteAdminFromWorkspace($workspace_id: ID!, $admin_id: ID!) {
    deleteAdminFromWorkspace(workspace_id: $workspace_id, admin_id: $admin_id)
}

mutation OpenSlackConversation(
    $project_id: ID!
    $code: String!
    $redirect_path: String!
) {
    openSlackConversation(
        project_id: $project_id
        code: $code
        redirect_path: $redirect_path
    )
}

mutation AddSlackBotIntegrationToProject(
    $project_id: ID!
    $code: String!
    $redirect_path: String!
) {
    addSlackBotIntegrationToProject(
        project_id: $project_id
        code: $code
        redirect_path: $redirect_path
    )
}

mutation CreateProject($name: String!, $workspace_id: ID!) {
    createProject(name: $name, workspace_id: $workspace_id) {
        id
        name
    }
}

mutation SubmitRegistrationForm(
    $workspace_id: ID!
    $team_size: String!
    $role: String!
    $use_case: String!
    $heard_about: String!
    $pun: String
) {
    submitRegistrationForm(
        workspace_id: $workspace_id
        team_size: $team_size
        role: $role
        use_case: $use_case
        heard_about: $heard_about
        pun: $pun
    )
}

mutation CreateWorkspace($name: String!) {
    createWorkspace(name: $name) {
        id
        name
    }
}

mutation EditProject($id: ID!, $name: String, $billing_email: String) {
    editProject(id: $id, name: $name, billing_email: $billing_email) {
        id
        name
        billing_email
    }
}

mutation DeleteProject($id: ID!) {
    deleteProject(id: $id)
}

mutation EditWorkspace($id: ID!, $name: String) {
    editWorkspace(id: $id, name: $name) {
        id
        name
    }
}

mutation DeleteSegment($segment_id: ID!) {
    deleteSegment(segment_id: $segment_id)
}

mutation EditSegment($project_id: ID!, $id: ID!, $params: SearchParamsInput!) {
    editSegment(project_id: $project_id, id: $id, params: $params)
}

mutation CreateSegment(
    $project_id: ID!
    $name: String!
    $params: SearchParamsInput!
) {
    createSegment(project_id: $project_id, name: $name, params: $params) {
        name
        id
        params {
            user_properties {
                name
                value
            }
            excluded_properties {
                name
                value
            }
            date_range {
                start_date
                end_date
            }
            os
            browser
            visited_url
            referrer
            identified
            hide_viewed
            app_versions
            environments
            device_id
            show_live_sessions
        }
    }
}

mutation CreateSessionComment(
    $project_id: ID!
    $session_secure_id: String!
    $session_timestamp: Int!
    $text: String!
    $text_for_email: String!
    $x_coordinate: Float!
    $y_coordinate: Float!
    $tagged_admins: [SanitizedAdminInput]!
    $tagged_slack_users: [SanitizedSlackChannelInput]!
    $session_url: String!
    $time: Float!
    $author_name: String!
    $session_image: String
    $tags: [SessionCommentTagInput]!
) {
    createSessionComment(
        project_id: $project_id
        session_secure_id: $session_secure_id
        session_timestamp: $session_timestamp
        text: $text
        text_for_email: $text_for_email
        x_coordinate: $x_coordinate
        y_coordinate: $y_coordinate
        tagged_admins: $tagged_admins
        tagged_slack_users: $tagged_slack_users
        session_url: $session_url
        time: $time
        author_name: $author_name
        session_image: $session_image
        tags: $tags
    ) {
        id
        timestamp
        created_at
        updated_at
        author {
            id
            name
            email
        }
        text
        x_coordinate
        y_coordinate
    }
}

mutation DeleteSessionComment($id: ID!) {
    deleteSessionComment(id: $id)
}

mutation CreateErrorComment(
    $project_id: ID!
    $error_group_secure_id: String!
    $text: String!
    $text_for_email: String!
    $tagged_admins: [SanitizedAdminInput]!
    $tagged_slack_users: [SanitizedSlackChannelInput]!
    $error_url: String!
    $author_name: String!
) {
    createErrorComment(
        project_id: $project_id
        error_group_secure_id: $error_group_secure_id
        text: $text
        text_for_email: $text_for_email
        tagged_admins: $tagged_admins
        tagged_slack_users: $tagged_slack_users
        error_url: $error_url
        author_name: $author_name
    ) {
        id
        created_at
        updated_at
        author {
            id
            name
            email
        }
        text
    }
}

mutation DeleteErrorComment($id: ID!) {
    deleteErrorComment(id: $id)
}

mutation DeleteErrorSegment($segment_id: ID!) {
    deleteErrorSegment(segment_id: $segment_id)
}

mutation EditErrorSegment(
    $project_id: ID!
    $id: ID!
    $params: ErrorSearchParamsInput!
) {
    editErrorSegment(project_id: $project_id, id: $id, params: $params)
}

mutation CreateErrorSegment(
    $project_id: ID!
    $name: String!
    $params: ErrorSearchParamsInput!
) {
    createErrorSegment(project_id: $project_id, name: $name, params: $params) {
        name
        id
        params {
            date_range {
                start_date
                end_date
            }
            os
            browser
            visited_url
            state
        }
    }
}

mutation CreateErrorAlert(
    $project_id: ID!
    $name: String!
    $count_threshold: Int!
    $threshold_window: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
) {
    createErrorAlert(
        project_id: $project_id
        count_threshold: $count_threshold
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}

mutation CreateRageClickAlert(
    $project_id: ID!
    $name: String!
    $count_threshold: Int!
    $threshold_window: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
) {
    createRageClickAlert(
        project_id: $project_id
        count_threshold: $count_threshold
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}

mutation UpdateErrorAlert(
    $project_id: ID!
    $name: String!
    $error_alert_id: ID!
    $count_threshold: Int!
    $threshold_window: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
) {
    updateErrorAlert(
        project_id: $project_id
        error_alert_id: $error_alert_id
        name: $name
        count_threshold: $count_threshold
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        Name
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}

mutation DeleteErrorAlert($project_id: ID!, $error_alert_id: ID!) {
    deleteErrorAlert(project_id: $project_id, error_alert_id: $error_alert_id) {
        id
    }
}

mutation DeleteSessionAlert($project_id: ID!, $session_alert_id: ID!) {
    deleteSessionAlert(
        project_id: $project_id
        session_alert_id: $session_alert_id
    ) {
        id
    }
}

mutation CreateDefaultAlerts(
    $project_id: ID!
    $alert_types: [String!]!
    $slack_channels: [SanitizedSlackChannelInput!]!
) {
    createDefaultAlerts(
        project_id: $project_id
        alert_types: $alert_types
        slack_channels: $slack_channels
    )
}
mutation CreateSessionFeedbackAlert(
    $project_id: ID!
    $name: String!
    $count_threshold: Int!
    $threshold_window: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
) {
    createSessionFeedbackAlert(
        project_id: $project_id
        count_threshold: $count_threshold
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}

mutation UpdateSessionFeedbackAlert(
    $project_id: ID!
    $session_feedback_alert_id: ID!
    $count_threshold: Int!
    $name: String!
    $threshold_window: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
) {
    updateSessionFeedbackAlert(
        project_id: $project_id
        session_feedback_alert_id: $session_feedback_alert_id
        count_threshold: $count_threshold
        slack_channels: $slack_channels
        name: $name
        environments: $environments
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        Name
        LastAdminToEditID
    }
}

mutation CreateNewUserAlert(
    $project_id: ID!
    $name: String!
    $count_threshold: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $threshold_window: Int!
) {
    createNewUserAlert(
        project_id: $project_id
        count_threshold: $count_threshold
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}

mutation CreateNewSessionAlert(
    $project_id: ID!
    $name: String!
    $count_threshold: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $threshold_window: Int!
    $exclude_rules: [String]!
) {
    createNewSessionAlert(
        project_id: $project_id
        count_threshold: $count_threshold
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
        exclude_rules: $exclude_rules
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
        ExcludeRules
    }
}

mutation UpdateNewSessionAlert(
    $project_id: ID!
    $session_alert_id: ID!
    $name: String!
    $count_threshold: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $threshold_window: Int!
    $exclude_rules: [String]!
) {
    updateNewSessionAlert(
        project_id: $project_id
        session_alert_id: $session_alert_id
        name: $name
        count_threshold: $count_threshold
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
        exclude_rules: $exclude_rules
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
        ExcludeRules
    }
}

mutation UpdateRageClickAlert(
    $project_id: ID!
    $rage_click_alert_id: ID!
    $name: String!
    $count_threshold: Int!
    $threshold_window: Int!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
) {
    updateRageClickAlert(
        project_id: $project_id
        rage_click_alert_id: $rage_click_alert_id
        name: $name
        count_threshold: $count_threshold
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
    }
}

mutation UpdateNewUserAlert(
    $project_id: ID!
    $session_alert_id: ID!
    $count_threshold: Int!
    $name: String!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $threshold_window: Int!
) {
    updateNewUserAlert(
        project_id: $project_id
        session_alert_id: $session_alert_id
        count_threshold: $count_threshold
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        ExcludedEnvironments
        CountThreshold
        LastAdminToEditID
    }
}

mutation CreateTrackPropertiesAlert(
    $project_id: ID!
    $name: String!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $track_properties: [TrackPropertyInput]!
    $threshold_window: Int!
) {
    createTrackPropertiesAlert(
        project_id: $project_id
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        track_properties: $track_properties
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        TrackProperties {
            id
            name
            value
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}
mutation UpdateTrackPropertiesAlert(
    $project_id: ID!
    $session_alert_id: ID!
    $name: String!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $track_properties: [TrackPropertyInput]!
    $threshold_window: Int!
) {
    updateTrackPropertiesAlert(
        project_id: $project_id
        session_alert_id: $session_alert_id
        slack_channels: $slack_channels
        environments: $environments
        name: $name
        track_properties: $track_properties
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        TrackProperties {
            id
            name
            value
        }
        ExcludedEnvironments
        CountThreshold
        LastAdminToEditID
        Name
    }
}

mutation CreateUserPropertiesAlert(
    $project_id: ID!
    $name: String!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $user_properties: [UserPropertyInput]!
    $threshold_window: Int!
) {
    createUserPropertiesAlert(
        project_id: $project_id
        name: $name
        slack_channels: $slack_channels
        environments: $environments
        user_properties: $user_properties
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        UserProperties {
            id
            name
            value
        }
        Name
        ExcludedEnvironments
        CountThreshold
        ThresholdWindow
        LastAdminToEditID
    }
}

mutation UpdateUserPropertiesAlert(
    $project_id: ID!
    $session_alert_id: ID!
    $name: String!
    $slack_channels: [SanitizedSlackChannelInput]!
    $environments: [String]!
    $user_properties: [UserPropertyInput]!
    $threshold_window: Int!
) {
    updateUserPropertiesAlert(
        project_id: $project_id
        session_alert_id: $session_alert_id
        slack_channels: $slack_channels
        environments: $environments
        name: $name
        user_properties: $user_properties
        threshold_window: $threshold_window
    ) {
        id
        ChannelsToNotify {
            webhook_channel
            webhook_channel_id
        }
        UserProperties {
            id
            name
            value
        }
        ExcludedEnvironments
        CountThreshold
        Name
        LastAdminToEditID
    }
}

mutation UpdateSessionIsPublic(
    $session_secure_id: String!
    $is_public: Boolean!
) {
    updateSessionIsPublic(
        session_secure_id: $session_secure_id
        is_public: $is_public
    ) {
        secure_id
        is_public
    }
}

mutation UpdateErrorGroupIsPublic(
    $error_group_secure_id: String!
    $is_public: Boolean!
) {
    updateErrorGroupIsPublic(
        error_group_secure_id: $error_group_secure_id
        is_public: $is_public
    ) {
        secure_id
        is_public
    }
}

mutation UpdateAllowMeterOverage(
    $workspace_id: ID!
    $allow_meter_overage: Boolean!
) {
    updateAllowMeterOverage(
        workspace_id: $workspace_id
        allow_meter_overage: $allow_meter_overage
    ) {
        id
        allow_meter_overage
    }
}
