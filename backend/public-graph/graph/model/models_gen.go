// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type BackendErrorObjectInput struct {
	SessionSecureID string    `json:"session_secure_id"`
	RequestID       string    `json:"request_id"`
	Event           string    `json:"event"`
	Type            string    `json:"type"`
	URL             string    `json:"url"`
	Source          string    `json:"source"`
	StackTrace      string    `json:"stackTrace"`
	Timestamp       time.Time `json:"timestamp"`
	Payload         *string   `json:"payload"`
}

type ErrorObjectInput struct {
	Event        string             `json:"event"`
	Type         string             `json:"type"`
	URL          string             `json:"url"`
	Source       string             `json:"source"`
	LineNumber   int                `json:"lineNumber"`
	ColumnNumber int                `json:"columnNumber"`
	StackTrace   []*StackFrameInput `json:"stackTrace"`
	Timestamp    time.Time          `json:"timestamp"`
	Payload      *string            `json:"payload"`
}

type InitializeSessionResponse struct {
	SecureID  string `json:"secure_id"`
	ProjectID int    `json:"project_id"`
}

type MetricInput struct {
	SessionSecureID string      `json:"session_secure_id"`
	Group           *string     `json:"group"`
	Name            string      `json:"name"`
	Value           float64     `json:"value"`
	Category        *string     `json:"category"`
	Timestamp       time.Time   `json:"timestamp"`
	Type            interface{} `json:"type"`
	URL             *string     `json:"url"`
}

type ReplayEventInput struct {
	Type      int         `json:"type"`
	Timestamp float64     `json:"timestamp"`
	Sid       float64     `json:"_sid"`
	Data      interface{} `json:"data"`
}

type ReplayEventsInput struct {
	Events []*ReplayEventInput `json:"events"`
}

type StackFrameInput struct {
	FunctionName *string       `json:"functionName"`
	Args         []interface{} `json:"args"`
	FileName     *string       `json:"fileName"`
	LineNumber   *int          `json:"lineNumber"`
	ColumnNumber *int          `json:"columnNumber"`
	IsEval       *bool         `json:"isEval"`
	IsNative     *bool         `json:"isNative"`
	Source       *string       `json:"source"`
}
