# CLIENT GRAPH

scalar Any
scalar Timestamp
scalar Int64

type Session {
    id: ID!
    secure_id: String!
    organization_id: ID!
    project_id: ID!
}

input StackFrameInput {
    functionName: String
    args: [Any]
    fileName: String
    lineNumber: Int
    columnNumber: Int
    isEval: Boolean
    isNative: Boolean
    source: String
}

input ErrorObjectInput {
    event: String!
    type: String!
    url: String!
    source: String!
    lineNumber: Int!
    columnNumber: Int!
    stackTrace: [StackFrameInput]!
    timestamp: Timestamp!
    payload: String
}

input BackendErrorObjectInput {
    session_secure_id: String!
    request_id: String!
    event: String!
    type: String!
    url: String!
    source: String!
    stackTrace: String!
    timestamp: Timestamp!
    payload: String
}

input MetricInput {
    session_secure_id: String!
    group: String
    name: String!
    value: Float!
    category: String
    timestamp: Timestamp!
    # kept for backwards compatibility with old clients, do not use
    type: Any
    url: String
}

input ReplayEventInput {
    type: Int!
    timestamp: Float!
    _sid: Float!
    data: Any!
}

input ReplayEventsInput {
    events: [ReplayEventInput]!
}

type Mutation {
    initializeSession(
        organization_verbose_id: String!
        enable_strict_privacy: Boolean!
        enable_recording_network_contents: Boolean!
        clientVersion: String!
        firstloadVersion: String!
        clientConfig: String!
        environment: String!
        appVersion: String
        fingerprint: String!
        session_secure_id: String
    ): Session
    identifySession(
        session_id: ID!
        user_identifier: String!
        user_object: Any
    ): ID
    addTrackProperties(session_id: ID!, properties_object: Any): ID
    addSessionProperties(session_id: ID!, properties_object: Any): ID
    pushPayload(
        session_id: ID!
        events: ReplayEventsInput!
        messages: String!
        resources: String!
        errors: [ErrorObjectInput]!
        is_beacon: Boolean
        has_session_unloaded: Boolean
        highlight_logs: String
    ): Int!
    pushBackendPayload(errors: [BackendErrorObjectInput]!): Any
    pushMetrics(metrics: [MetricInput]!): ID!
    markBackendSetup(session_secure_id: String!): ID!
    addSessionFeedback(
        session_id: ID!
        user_name: String
        user_email: String
        verbatim: String!
        timestamp: Timestamp!
    ): ID!
}

type Query {
    ignore(id: ID!): Any
}
